--Basalt configurated installer--
local filePath = "/lib/BasaltMaster/init.lua"
--local filePath = "basalt.lua" 
--local filePath = "lib/basalt.lua"

local basalt = require(filePath:gsub(".lua", ""))
local w, h = term.getSize()

local print_r = function (table)
    BPrintTable(basalt,table)
end
--------------------------
local mainFrame = basalt.createFrame()
 :show()

local topBar = mainFrame:addMenubar()
                    :setPosition(1,1)
                    :setSize("{parent.w}",1)
local onTopBarSelect = function (self)
    local cont = self:getItemCount()
    for i=1,cont do
        local item = self:getItem(i)
        if item.text == self:getValue().text then
            --print_r(item.args[1])
            item.args[1]:show()
        else
            item.args[1]:hide()
        end
    end
end
local addPage = function (name,BackgroundColor)
    BackgroundColor = BackgroundColor or colors.white
    local page = mainFrame:addFrame()
                    :setPosition(1,2)
                    :setSize("{parent.w}","{parent.h-1}")
                    :setBackground(BackgroundColor)
                    --:show()
                    :hide()
    topBar:addItem(name,colors.gray,colors.white,page)
    :onSelect(onTopBarSelect)
    return page
    
end

local function makeResizeable(frame, minW, minH, maxW, maxH)
    frame:addProperty("Resizeable", "boolean", true)
    minW = minW or 4
    minH = minH or 4
    maxW = maxW or 99
    maxH = maxH or 99
    local btn = frame:addButton()
        :setIgnoreOffset(true)
        :setPosition("{parent.w-1}", "{parent.h-1}")
        :setSize(1, 1)
        :setText("/")
        :setForeground(colors.black)
        :setBackground(colors.gray)
        :onDrag(function(self, _, _, xOffset, yOffset)
            if not frame:getResizeable() then
                return
            end
            local w, h = frame:getSize()
            local wOff, hOff = w, h
            if(w+xOffset-1>=minW)and(w+xOffset-1<=maxW)then
                wOff = w+xOffset-1
            end
            if(h+yOffset-1>=minH)and(h+yOffset-1<=maxH)then
                hOff = h+yOffset-1
            end
            frame:setSize(wOff, hOff)
        end)
    return frame
end

--------------------------

local page1 = addPage("Page 1",colors.blue)
local pannee =  page1:addPanee()
:setPosition(1,2)
:setSize("{parent.w-2}",1)
:setBackground(colors.white)
:setBgSymbol("*")
:setBgSymbolColor(colors.red)
:show()
local frameTestThread = page1:addThread()
local paneeThread = pannee:start(0.5,frameTestThread)

print_r(mainFrame)
--basalt.saveDebug()
----
local page2 = addPage("Page 2",colors.pink)

 local horizontalFrame = page2:addFrame():setPosition(1,1):setSize("{parent.w-2}","{parent.h-2}"):setBackground(colors.white):setBorder(colors.green)
    local verticalFrame1 = horizontalFrame:addFlexbox():setPosition(2,2):setSize("{parent.w-3}","{parent.h/3*2}"):setBackground(colors.lightGray):setBorder(colors.red)
                                            :setFlexDirection("row")
                                            :setJustifyContent("space-between")
        local testLabel = verticalFrame1:addLabel():setSize("{parent.w}", "{parent.h}"):setPosition(1,1):setText("lorem ipsum dolor sit amet, co.lorem ipsum dolor sit amet, co.lorem ipsum dolor sit amet, co.lorem ipsum dolor sit amet, co.lorem ipsum dolor sit amet, co."):setForeground(colors.red)
        :setFlexBasis(1):setFlexGrow(1)
        local testPanee = verticalFrame1:addPanee():setSize(1,"{parent.h}"):setFlexBasis(1):setFlexGrow(0)
        local testButton = verticalFrame1:addButton():setSize(10, 3)
        :setFlexBasis(1):setFlexGrow(0.1)
        :onClick(function(self)
            verticalFrame1:addButton():setSize(10, 3):setFlexGrow(0.1)
        end)
    local verticalFrame2 = horizontalFrame:addScrollableFrame():setPosition(2,"{parent.h/3*2}"):setSize("{parent.w-3}","{parent.h/3-1}"):setBackground(colors.lightGray):setBorder(colors.red)

----
local page3 = addPage("Page 3",colors.green)
local resizeableFrame = makeResizeable(page3:addMovableFrame():setPosition(1,1):setSize(40, 20):setBackground(colors.lightGray):setBorder(colors.gray):setDraggable(false)):setResizeable(false)
local layout = resizeableFrame:addLayout():setSize("{parent.w-3}","{parent.h-3}"):setPosition(2,2):setBackground(colors.white)
                    :setLayoutAlignItems("stretch"):setLayoutGap(0)
local layoutFrame1 = layout:addLayout():setPosition(1,1):setBackground(colors.lightBlue):setBorder(colors.red)
                            :setFlexGrow(2)
                            :setFlexBasis(16)
                            :setFlexOrder(1)
                            :setLayoutAlignItems("stretch"):setLayoutGap(1):setLayoutDirection("column"):setLayoutPadding(1)

                    
            
                            layoutFrame1:addButton():setText("Button 1"):setFlexBasis(3)
                            layoutFrame1:addLabel():setText("lorem ipsum dolor sit amet, co.lorem ipsum dolor sit amet, co.lorem ipsum dolor sit amet, co.lorem ipsum dolor sit amet, co.lorem ipsum dolor silorem ipsum dolor sit amet, co.lorem ipsum dolor sit amet, co.lorem ipsum dolor sit amet, co.lorem ipsum dolor sit amet, co.lorem ipsum dolor si1")
                                                    :setFlexBasis(5)
                                                    :setFlexGrow(1)
local layoutFrame2 = layout:addFrame():setPosition(1,1):setBackground(colors.lightGray)
                            :setFlexGrow(1)
                            :setFlexBasis(16)
                            :setFlexShrink(1)
    local layoutFrame2Thread = layoutFrame2:addThread()
    local layoutFrame2panne = layoutFrame2:addPanee()
    :setPosition(1,"{parent.h/2}")
    :setSize("{parent.w-2}",1)
    :setBackground(colors.white)
    :setBgSymbol("*")
    :setBgSymbolColor(colors.red)
    :show()
    layoutFrame2panne:start(0.5,layoutFrame2Thread)

    

----

--basalt版本标签,点击关闭程序
mainFrame:addLabel()
 :setText("basalt v"..basalt.getVersion())
    :setPosition(1, "{parent.h-1}")
    :setForeground(colours.red)
    :setZ(100)
    :onClick(function(self)
        basalt.stopUpdate()
    end)
    
basalt.autoUpdate()
